# 端口配置
server:
  port: 8888

spring:
  # 配置数据库
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://103.242.2.163:3306/qbook?serverTimezone=UTC&characterEncoding=utf-8
    username: qbook
    password: YFBKythKkpDSYsGh
    driver-class-name: com.mysql.cj.jdbc.Driver
    #druid 数据源专有配置
    initialSize: 5   #初始化时建立物理连接的个数
    minIdle: 5    #最小连接池数量
    maxActive: 20   #最大连接池数量
    maxWait: 60000    #获取连接时最大等待时间
    timeBetweenEvictionRunsMillis: 60000    #Destory线程检测连接的间隔时间
    minEvictableIdleTimeMillis: 300000    #连接保持空闲而不被驱逐的最长时间
    validationQuery: SELECT 1 FROM DUAL    #检测连接是否有效的sql
    testWhileIdle: true
    testOnBorrow: false   #申请连接时执行validationQuery检测连接是否有效
    testOnReturn: false    #归还连接时执行validationQuery检测连接是否有效
    poolPreparedStatements: true   #是否缓存preparedStatements
    #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
    #如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入 log4j 依赖即可
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
redis:
  #redis 服务器地址
  hostName: localhost
  #redis端口
  port: 6379
  #redis 密码
  password:
  #客户端超时时间单位是毫秒 默认是2000
  timeout: 5000
  #最大空闲数
  maxIdle: 20
  #连接池的最大数据库连接数
  maxActive: -1
  #控制一个pool可分配多少个jedis实例,用来替换上面的maxActive
  maxTotal: 100
  #最大建立连接等待时间。如果超过此时间将接到异常
  maxWaitMillis: 100
  #连接的最小空闲时间
  minEvictableIdleTimeMillis: 864000000
  #每次释放连接的最大数目
  numTestsPerEvictionRun: 10
  #逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程
  timeBetweenEvictionRunsMillis: 300000
  #是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
  testOnBorrow: true
  #在空闲时检查有效性
  testWhileIdle: false
  #数据库
  database: 0

logging:
  config: log4j2.config.xml
  level:
    cn.jay.repository: debug

mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #type-aliases-package: cn.qinwh.qbooksystem.entity
  mapper-locations: classpath*:mappers/*.xml